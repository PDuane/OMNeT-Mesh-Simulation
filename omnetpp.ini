[Config BasicParameters]
description = 4 Node, 3 hop network using Ad-Hoc On-Demand Distance Vector (AODV) routing
network = Multihop
sim-time-limit = 20s

*.host*.ipv4.arp.typename = "GlobalArp"
*.host*.forwarding = true

#*.configurator.config = xml("<config><interface hosts='**' address='10.0.0.x' netmask='255.255.255.0'/><autoroute metric='errorRate'/></config>")
*.configurator.optimizeRoutes = false

*.hostA.numApps = 1
*.hostA.app[0].typename = "UdpBasicApp"
*.hostA.app[0].destAddresses = "hostB"
*.hostA.app[0].destPort = 5000
*.hostA.app[0].messageLength = 1000B
*.hostA.app[0].sendInterval = exponential(12ms)
*.hostA.app[0].packetName = "UDPData"

*.hostB.numApps = 1
*.hostB.app[0].typename = "UdpSink"
*.hostB.app[0].localPort = 5000

*.host*.wlan[0].typename = "WirelessInterface"
*.host*.wlan[0].radio.typename = "UnitDiskRadio"
*.host*.wlan[0].radio.transmitter.communicationRange = 300m
*.host*.wlan[0].radio.transmitter.interferenceRange = 500m
*.host*.wlan[0].mac.typename = "CsmaCaMac"
*.host*.wlan[0].mac.ackTimeout = 300us
*.host*.wlan[0].mac.useAck = true
*.host*.wlan[0].queue.typename = "DropTailQueue"
#*.host*.wlan[0].queue.packetCapacity = -1

*.host*.**.bitrate = 1Mbps

*.hostA.wlan[0].radio.displayCommunicationRange = true
*.hostC.wlan[0].radio.displayCommunicationRange = true

*.configurator.addStaticRoutes = false
*.host*.typename = "AodvRouter"

# Physical Environment
*.host*.mobility.typename = "StationaryMobility"
*.host*.mobility.initialZ = 0.1m

*.physicalEnvironment.config = xmldoc("mine.xml")
*.radioMedium.obstacleLoss.typename = "IdealObstacleLoss"

# Visualizer
*.visualizer.sceneVisualizer.descriptionFigure = "title"

*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.physicalLinkVisualizer.packetFilter = "UDPData*"

[Config RealisticChannelModel]
description = Changing to a realistic channel model from UnitDiskRadio
extends = BasicParameters
*.radioMedium.typename = "ApskScalarRadioMedium"
*.radioMedium.backgroundNoise.power = -110dBm
*.radioMedium.mediumLimitCache.centerFrequency = 2.4GHz

# Configure radio
*.host*.wlan[0].radio.typename = "ApskScalarRadio"
*.host*.wlan[0].radio.centerFrequency = 2.4GHz
*.host*.wlan[0].radio.bandwidth = 5MHz
*.host*.wlan[0].radio.transmitter.modulation = "QPSK"
*.host*.wlan[0].radio.transmitter.power = 10mW
*.host*.wlan[0].radio.transmitter.preambleDuration = 10us
*.host*.wlan[0].radio.transmitter.headerLength = 8B
*.host*.wlan[0].radio.receiver.modulation = "QPSK"
*.host*.wlan[0].radio.receiver.sensitivity = -120dBm
*.host*.wlan[0].radio.receiver.energyDetection = -100dBm
*.host*.wlan[0].radio.receiver.snirThreshold = 4dB

*.hostB.wlan[*].radio.bitErrorRate.result-recording-modes = default,+vector

[Config ExperimentAndResearchData]
description = Implementing basic data and information from research and tunnel experiment results
extends = RealisticChannelModel

*.physicalEnvironment.ground.typename = "FlatGround"
*.physicalEnvironment.ground.elevation = 0m

*.radioMedium.pathLoss.alpha = 2.958

[Config DSCP]
description = Implementing QoS routing via DSCP
extends = RealisticChannelModel
*.hostA.numApps = 2
*.hostA.app[0].dscp = 0
*.hostA.app[0].packetName = "UDPData-Standard"
*.hostA.app[1].typename = "UdpBasicApp"
*.hostA.app[1].destAddresses = "hostB"
*.hostA.app[1].destPort = 5000
*.hostA.app[1].messageLength = 1000B
*.hostA.app[1].sendInterval = exponential(12ms)
*.hostA.app[1].packetName = "UDPData-Priority"
*.hostA.app[1].dscp = 14
