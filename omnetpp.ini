[Config BasicParameters]
description = 4 Node, 3 hop network using Ad-Hoc On-Demand Distance Vector (AODV) routing
network = Multihop
sim-time-limit = 20s

**.hostR.wlan[*].radio.packetErrorRate:vector.vector-recording = true
#**.hostR.wlan[*].radio.
#**.hostB.wlan[*].radio.minSnir:vector.vector-recording = true
**.hostR.wlan[*].radio.packetErrorRate.result-recording-modes = +vector
#**.hostB.wlan[*].radio.minSnir.result-recording-modes = +vector

*.host*.ipv4.arp.typename = "GlobalArp"
*.host*.forwarding = true

#*.configurator.config = xml("<config><interface hosts='**' address='10.0.0.x' netmask='255.255.255.0'/><autoroute metric='errorRate'/></config>")
*.configurator.optimizeRoutes = false


*.host*.wlan[0].typename = "WirelessInterface"
*.host*.wlan[0].radio.typename = "UnitDiskRadio"
*.host*.wlan[0].radio.transmitter.communicationRange = 300m
*.host*.wlan[0].radio.transmitter.interferenceRange = 500m
*.host*.wlan[0].mac.typename = "CsmaCaMac"
*.host*.wlan[0].mac.ackTimeout = 300us
*.host*.wlan[0].mac.useAck = true
*.host*.wlan[0].queue.typename = "DropTailQueue"
#*.host*.wlan[0].queue.packetCapacity = -1

*.host*.**.bitrate = 1Mbps

*.hostA.wlan[0].radio.displayCommunicationRange = true
*.hostC.wlan[0].radio.displayCommunicationRange = true

*.configurator.addStaticRoutes = false
*.host*.typename = "AodvRouter"

# Physical Environment
*.host*.mobility.typename = "StationaryMobility"
*.host*.mobility.initialZ = 0.1m

*.physicalEnvironment.config = xmldoc("mine2.xml")

# Visualizer
*.visualizer.sceneVisualizer.descriptionFigure = "title"

#*.visualizer.physicalLinkVisualizer.displayLinks = true
#*.visualizer.physicalLinkVisualizer.packetFilter = "UDPData*"

[Config RealisticChannelModel]
description = Changing to a realistic channel model from UnitDiskRadio
extends = BasicParameters
*.radioMedium.typename = "ApskScalarRadioMedium"
*.radioMedium.backgroundNoise.power = -105dBm
*.radioMedium.mediumLimitCache.centerFrequency = 2.4GHz

# Configure radio
*.host*.wlan[0].radio.typename = "ApskScalarRadio"
*.host*.wlan[0].radio.centerFrequency = 2.4GHz
*.host*.wlan[0].radio.bandwidth = 10MHz
*.host*.wlan[0].radio.transmitter.modulation = "QPSK"
*.host*.wlan[0].radio.transmitter.power = 1mW
*.host*.wlan[0].radio.transmitter.preambleDuration = 10us
*.host*.wlan[0].radio.transmitter.headerLength = 8B
*.host*.wlan[0].radio.receiver.modulation = "QPSK"
*.host*.wlan[0].radio.receiver.sensitivity = -120dBm
*.host*.wlan[0].radio.receiver.energyDetection = -100dBm
*.host*.wlan[0].radio.receiver.snirThreshold = 4dB

*.physicalEnvironment.ground.typename = "FlatGround"
*.physicalEnvironment.ground.elevation = 0m

*.hostA.wlan[*].radio.bitErrorRate.result-recording-modes = default,+vector

[Config ThroughoutMeasurementSetup]
description = Common settings for throughput measurements
extends = RealisticChannelModel
*.hostA.numApps = 1
*.hostA.app[0].typename = "UdpSink"
*.hostA.app[0].localPort = 5001

*.hostR.numApps = 1
*.hostR.app[0].typename = "UdpBasicApp"
*.hostR.app[0].destAddresses = "hostA"
*.hostR.app[0].destPort = 5001
*.hostR.app[0].messageLength = 1000B
*.hostR.app[0].sendInterval = 0.002ms
*.hostR.app[1].packetName = "StreamPacket"

*.visualizer.routingTableVisualizer.displayRoutingTables = true
*.visualizer.routingTableVisualizer.lineColor="white"
*.visualizer.routingTableVisualizer.displayLabels=false
*.visualizer.routingTableVisualizer.destinationFilter = "hostA"

[Config VideoStream]
description = Implement a video stream app for high-volume data
extends = ThroughoutMeasurementSetup

*.radioMedium.pathloss.typename = "FreeSpacePathLoss"

**.bitrate = 40 Mbps
#*.host*.wlan[0].radio.receiver.modulation.typename="Qam64Modulation"
#*.host*.wlan[0].radio.transmitter.modulation.typename="Qam64Modulation"
*.host*.wlan[0].radio.receiver.modulation="QAM-16"
*.host*.wlan[0].radio.transmitter.modulation="QAM-16"

[Config MovingThroughputTest]
description = Testing the throughput at diferent locations using a moving Node R
extends = ThroughoutMeasurementSetup
#sim-time-limit = 1173.34s
sim-time-limit = 183s

*.radioMedium.pathloss.typename = "FreeSpacePathLoss"
#*.radioMedium.obstacleLoss.typename = "IdealObstacleLoss"
**.bitrate = 100 Mbps
#*.host*.wlan[0].radio.receiver.modulation.typename="Qam64Modulation"
#*.host*.wlan[0].radio.transmitter.modulation.typename="Qam64Modulation"
*.host*.wlan[0].radio.receiver.modulation="QAM-16"
*.host*.wlan[0].radio.transmitter.modulation="QAM-16"

<<<<<<< HEAD
*.visualizer.routingTableVisualizer.displayRoutingTables = true
*.visualizer.routingTableVisualizer.destinationFilter = "hostA"

*.hostA.numApps = 1
*.hostA.app[0].typename = "UdpSink"
*.hostA.app[0].localPort = 5001

*.hostR.numApps = 1
*.hostR.app[0].typename = "UdpBasicApp"
*.hostR.app[0].destAddresses = "hostA"
*.hostR.app[0].destPort = 5001
*.hostR.app[0].messageLength = 1000B
*.hostR.app[0].sendInterval = 0.01ms
*.hostR.app[1].packetName = "StreamPacket"

=======
>>>>>>> 012b68007200686f549bf39ad7c7149cba3f7bc7
*.hostR.mobility.typename = "TurtleMobility"
*.hostR.mobility.turtleScript = xmldoc("LinearMovement.xml")

[Config ThroughputDistanceTest_Manhattan]
description = Testing the throughput at diferent locations using a moving Node R
extends = MovingThroughputTest

*.radioMedium.pathloss.typename = "ManhattanPathLoss"

[Config HeatmapGeneration]
description = Testing the throughput at diferent locations using a moving Node R
extends = ThroughputDistanceTest_Manhattan
sim-time-limit = 1102.222222222222s

*.host*.wlan[0].radio.transmitter.power = 2mW
*.hostR.mobility.turtleScript = xmldoc("HeatmapPath.xml")

[Config MultipathVerification]
description = Testing the throughput at diferent locations using a moving Node R
extends = ThroughputDistanceTest_Manhattan
sim-time-limit = 150s

*.host*.wlan[0].radio.transmitter.power = 2mW
*.hostR.mobility.turtleScript = xmldoc("LinearMovement.xml")

[Config StationaryTest]
description = Test with stationary Node R
extends = MultipathVerification
sim-time-limit = 10s
*.hostR.mobility.typename = "StationaryMobility"
